@page "/todoUpdate/{Id:guid}"
@inherits UpdateTodoBase
@using TodoListBlazor.Shared.Dtos
@using TodoListBlazor.Shared.Enums

@if (Todo == null)
{
    <h3>Loading</h3>
}
else
{
    <Fields Flex="Flex.JustifyContent.Center" Padding="Padding.Is5">
    <Field ColumnSize="ColumnSize.Is7.OnDesktop">
        <FieldLabel>Title</FieldLabel>
        <TextEdit @bind-Text="@Todo.Title" />
    </Field>
    <Field  ColumnSize="ColumnSize.Is7.OnDesktop">
        <FieldLabel>Description</FieldLabel>
        <MemoEdit Rows="3" @bind-Text="@Todo.Description"/>
    </Field>
    <Field ColumnSize="ColumnSize.Is7.OnDesktop">
        <FieldLabel>Status</FieldLabel>
        <Select TValue="string"   SelectedValues="@States" SelectedValueChanged="@OnStaleSelected">

                <SelectItem>Select Task Status...</SelectItem>
            @foreach (string state in States)
            {
                <SelectItem Value="@state">@state</SelectItem>
            }
        </Select>
    </Field>
    <Field ColumnSize="ColumnSize.Is8.OnDesktop">
        <FieldLabel>Completed</FieldLabel>
        <Check TValue="bool" @bind-Checked="@Todo.IsCompleted">
            @if (@Todo.IsCompleted)
                {
                    <b>Completed</b>
                }
                else
                {
                    <b>In Completed</b>
                }
        </Check>
    </Field>
    <Button  Block Color="Color.Primary" @onclick="() => (UpdateTodo(new TodoDto 
        {
            Id = Todo.Id,
            Title = Todo.Title,
            Description = Todo.Description,
            TodoState = State,
            IsCompleted = Todo.IsCompleted
        }))">
        Update
    </Button>
</Fields>
}